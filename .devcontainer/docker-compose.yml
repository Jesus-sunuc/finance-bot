services:
  editor:
    container_name: finance_editor
    build:
      context: .
    user: root
    volumes:
      - developer_home:/home/developer
      - ../:/app/
      - $HOME/.ssh:/home/developer/.ssh
      - $HOME/.gnupg:/home/developer/.gnupg
      - ./.bashrc:/home/developer/.bashrc
      - ./.bash-git-prompt:/home/developer/.bash-git-prompt
    environment:
      - TZ=America/Denver
      - PYTHONPATH=/app/api/
      - ALLOW_EMPTY_PASSWORD=no
    working_dir: /app
    command: tail -f /dev/null

  client:
    container_name: finance_client
    build:
      context: .
    user: developer
    volumes:
      - ../:/app/
    env_file:
      - .env
    command: >
      sh -c "
        cd /app/client
        npm i
        npm start
      "
    ports:
      - 8080:8080

  api:
    container_name: finance_api
    build:
      context: .
    user: root
    volumes:
      - ../:/app/
      - developer_home:/home/developer
    working_dir: /app
    environment:
      - TZ=America/Denver
    command: >
      sh -c "
        #rm -rf /home/developer/virtualenv
        mkdir -p /home/developer/virtualenv
        chown -R developer:developer /home/developer/virtualenv
        su - developer
        
        python3.11 -m venv /home/developer/virtualenv
        source /home/developer/virtualenv/bin/activate
        pip install --upgrade pip

        cd api
        pip install -r requirements.txt
        fastapi dev src/main.py --host 0.0.0.0
      "

  finance_db:
    # psql -U $POSTGRES_USER $POSTGRES_DB
    image: postgres:17
    container_name: finance_db
    environment:
      - POSTGRES_DB=finance
      - POSTGRES_USER=financeUser
      - POSTGRES_PASSWORD=finance1!
      - TZ=America/Denver
    ports:
      - 5432:5432
    volumes:
      - ../api/schema.sql:/docker-entrypoint-initdb.d/schema.sql

volumes:
  developer_home:
